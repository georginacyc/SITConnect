//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SITConnect.DBServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/DBService1")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditCard", Namespace="http://schemas.datacontract.org/2004/07/SITConnect.Entity")]
    [System.SerializableAttribute()]
    public partial class CreditCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cvv {
            get {
                return this.CvvField;
            }
            set {
                if ((object.ReferenceEquals(this.CvvField, value) != true)) {
                    this.CvvField = value;
                    this.RaisePropertyChanged("Cvv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Expiry {
            get {
                return this.ExpiryField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiryField, value) != true)) {
                    this.ExpiryField = value;
                    this.RaisePropertyChanged("Expiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DBService1.Entity")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Attempts_LeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Card_CVVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Card_ExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Card_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Card_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] IVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Last_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Password_AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Password_Last1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Password_Last2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Password_SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Suspended_SinceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attempts_Left {
            get {
                return this.Attempts_LeftField;
            }
            set {
                if ((this.Attempts_LeftField.Equals(value) != true)) {
                    this.Attempts_LeftField = value;
                    this.RaisePropertyChanged("Attempts_Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card_CVV {
            get {
                return this.Card_CVVField;
            }
            set {
                if ((object.ReferenceEquals(this.Card_CVVField, value) != true)) {
                    this.Card_CVVField = value;
                    this.RaisePropertyChanged("Card_CVV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card_Expiry {
            get {
                return this.Card_ExpiryField;
            }
            set {
                if ((object.ReferenceEquals(this.Card_ExpiryField, value) != true)) {
                    this.Card_ExpiryField = value;
                    this.RaisePropertyChanged("Card_Expiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card_Name {
            get {
                return this.Card_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Card_NameField, value) != true)) {
                    this.Card_NameField = value;
                    this.RaisePropertyChanged("Card_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card_Num {
            get {
                return this.Card_NumField;
            }
            set {
                if ((object.ReferenceEquals(this.Card_NumField, value) != true)) {
                    this.Card_NumField = value;
                    this.RaisePropertyChanged("Card_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] IV {
            get {
                return this.IVField;
            }
            set {
                if ((object.ReferenceEquals(this.IVField, value) != true)) {
                    this.IVField = value;
                    this.RaisePropertyChanged("IV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_Name {
            get {
                return this.Last_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_NameField, value) != true)) {
                    this.Last_NameField = value;
                    this.RaisePropertyChanged("Last_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Password_Age {
            get {
                return this.Password_AgeField;
            }
            set {
                if ((this.Password_AgeField.Equals(value) != true)) {
                    this.Password_AgeField = value;
                    this.RaisePropertyChanged("Password_Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password_Last1 {
            get {
                return this.Password_Last1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Password_Last1Field, value) != true)) {
                    this.Password_Last1Field = value;
                    this.RaisePropertyChanged("Password_Last1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password_Last2 {
            get {
                return this.Password_Last2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Password_Last2Field, value) != true)) {
                    this.Password_Last2Field = value;
                    this.RaisePropertyChanged("Password_Last2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password_Salt {
            get {
                return this.Password_SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.Password_SaltField, value) != true)) {
                    this.Password_SaltField = value;
                    this.RaisePropertyChanged("Password_Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Suspended_Since {
            get {
                return this.Suspended_SinceField;
            }
            set {
                if ((this.Suspended_SinceField.Equals(value) != true)) {
                    this.Suspended_SinceField = value;
                    this.RaisePropertyChanged("Suspended_Since");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DBServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        SITConnect.DBServiceReference1.CompositeType GetDataUsingDataContract(SITConnect.DBServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SITConnect.DBServiceReference1.CompositeType> GetDataUsingDataContractAsync(SITConnect.DBServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCard", ReplyAction="http://tempuri.org/IService1/CreateCardResponse")]
        SITConnect.DBServiceReference1.CreditCard CreateCard(string name, string num, string cvv, string expiry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCard", ReplyAction="http://tempuri.org/IService1/CreateCardResponse")]
        System.Threading.Tasks.Task<SITConnect.DBServiceReference1.CreditCard> CreateCardAsync(string name, string num, string cvv, string expiry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAccount", ReplyAction="http://tempuri.org/IService1/CreateAccountResponse")]
        int CreateAccount(string email, string pw, string pwsalt, string fname, string lname, System.DateTime dob, string card_name, string card_num, string card_cvv, string card_expiry, byte[] iv, byte[] key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAccount", ReplyAction="http://tempuri.org/IService1/CreateAccountResponse")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(string email, string pw, string pwsalt, string fname, string lname, System.DateTime dob, string card_name, string card_num, string card_cvv, string card_expiry, byte[] iv, byte[] key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectByEmail", ReplyAction="http://tempuri.org/IService1/SelectByEmailResponse")]
        SITConnect.DBServiceReference1.User SelectByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectByEmail", ReplyAction="http://tempuri.org/IService1/SelectByEmailResponse")]
        System.Threading.Tasks.Task<SITConnect.DBServiceReference1.User> SelectByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        int ChangePassword(string email, string newpass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        System.Threading.Tasks.Task<int> ChangePasswordAsync(string email, string newpass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAttempts", ReplyAction="http://tempuri.org/IService1/CheckAttemptsResponse")]
        bool CheckAttempts(string email, bool pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAttempts", ReplyAction="http://tempuri.org/IService1/CheckAttemptsResponse")]
        System.Threading.Tasks.Task<bool> CheckAttemptsAsync(string email, bool pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckSuspended", ReplyAction="http://tempuri.org/IService1/CheckSuspendedResponse")]
        bool CheckSuspended(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckSuspended", ReplyAction="http://tempuri.org/IService1/CheckSuspendedResponse")]
        System.Threading.Tasks.Task<bool> CheckSuspendedAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SITConnect.DBServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SITConnect.DBServiceReference1.IService1>, SITConnect.DBServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SITConnect.DBServiceReference1.CompositeType GetDataUsingDataContract(SITConnect.DBServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SITConnect.DBServiceReference1.CompositeType> GetDataUsingDataContractAsync(SITConnect.DBServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public SITConnect.DBServiceReference1.CreditCard CreateCard(string name, string num, string cvv, string expiry) {
            return base.Channel.CreateCard(name, num, cvv, expiry);
        }
        
        public System.Threading.Tasks.Task<SITConnect.DBServiceReference1.CreditCard> CreateCardAsync(string name, string num, string cvv, string expiry) {
            return base.Channel.CreateCardAsync(name, num, cvv, expiry);
        }
        
        public int CreateAccount(string email, string pw, string pwsalt, string fname, string lname, System.DateTime dob, string card_name, string card_num, string card_cvv, string card_expiry, byte[] iv, byte[] key) {
            return base.Channel.CreateAccount(email, pw, pwsalt, fname, lname, dob, card_name, card_num, card_cvv, card_expiry, iv, key);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(string email, string pw, string pwsalt, string fname, string lname, System.DateTime dob, string card_name, string card_num, string card_cvv, string card_expiry, byte[] iv, byte[] key) {
            return base.Channel.CreateAccountAsync(email, pw, pwsalt, fname, lname, dob, card_name, card_num, card_cvv, card_expiry, iv, key);
        }
        
        public SITConnect.DBServiceReference1.User SelectByEmail(string email) {
            return base.Channel.SelectByEmail(email);
        }
        
        public System.Threading.Tasks.Task<SITConnect.DBServiceReference1.User> SelectByEmailAsync(string email) {
            return base.Channel.SelectByEmailAsync(email);
        }
        
        public int ChangePassword(string email, string newpass) {
            return base.Channel.ChangePassword(email, newpass);
        }
        
        public System.Threading.Tasks.Task<int> ChangePasswordAsync(string email, string newpass) {
            return base.Channel.ChangePasswordAsync(email, newpass);
        }
        
        public bool CheckAttempts(string email, bool pass) {
            return base.Channel.CheckAttempts(email, pass);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAttemptsAsync(string email, bool pass) {
            return base.Channel.CheckAttemptsAsync(email, pass);
        }
        
        public bool CheckSuspended(string email) {
            return base.Channel.CheckSuspended(email);
        }
        
        public System.Threading.Tasks.Task<bool> CheckSuspendedAsync(string email) {
            return base.Channel.CheckSuspendedAsync(email);
        }
    }
}
